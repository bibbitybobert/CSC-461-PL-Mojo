struct Array[T: AnyType]:
    var data: Pointer[T]
    var size: Int

    fn __init__(inout self, size: Int, value: T):
        self.size = size
        self.data = Pointer[T].alloc(self.size)
        for i in range(self.size):
            self.data.store(i, value)

    fn __getitem__(self, i: Int) -> T:
        return self.data.load(i)

    fn __setitem__(inout self, loc: Int, item: T):
        if loc >= self.size:
            print("Warning: you're trying to set an index out of bounds, doing nothing")
            return
        self.data.store(loc, item)

    fn __del__(owned self):
        self.data.free()